#!/usr/bin/env node

const rt = require("./rt");

rt.async_raiilock(async function () {

    const deployedCollateral = rt.get("Collateral");
    rt.log("get Collateral:", JSON.stringify(deployedCollateral, null, 4));

    const tokens = rt.gettokens();
    for (let i = 0; i < tokens.length; ++i) {
        const token = tokens[i].symbol;

        const collateralAddress = deployedCollateral && deployedCollateral[token];
        rt.assert(collateralAddress, `not find collateral(${token})`);

        const configure = rt.configure()['government']['collateral'][token];
        rt.assert(configure, `no get 'government.collateral.${token}'`);

        let upp = configure.upp;
        rt.assert(upp == 0 || upp, `no get 'government.collateral.${token}.upp'`);
        rt.log(`get 'government.collateral.${token}.upp': `, upp);

        upp = rt.web3().utils.toWei(upp.toString(), 'ether').toString();
        rt.log(`Collateral.methods.setupp(upp = ${upp})`);

        let Collateral = await rt.rt_contract_at("Collateral", collateralAddress);
        const tx = Collateral.methods.setupp(upp);
        await rt.send(tx, collateralAddress);
    }
});