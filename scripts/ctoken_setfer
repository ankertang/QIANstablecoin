#!/usr/bin/env node

const rt = require("./rt");

//token: USDT, DAI, TES, ...
const argv = rt.yargs()
    .options('token', {
        alias: 't',
        describe: 'The symbol of the token collateral',
        type: 'string'
    })
    .argv;

rt.async_raiilock(async function() {

    const token = argv.token;

    rt.assert(token, "missing option: --token | -t");

    const deployedctoken = rt.get("ctoken");
    rt.log("get ctoken:", 
        JSON.stringify(deployedctoken, null, 4));
    
        const ctokenaddress = deployedctoken && deployedctoken[token];
        rt.assert(ctokenaddress, `not find ctoken(${token})`);
    
        const deployedfeeder = rt.get("feeder");
        rt.log('get feeder:',
            JSON.stringify(deployedfeeder, null, 4));
        const feederaddress = deployedfeeder && deployedfeeder[token];
        rt.assert(feederaddress, `not find feeder(${token}`);
    
        rt.log(`ctoken.methods.setfer(fer = ${feederaddress})`);
        
        let ctoken = await rt.rt_contract_at("ctoken", ctokenaddress);
        const tx = ctoken.methods.setfer(feederaddress);
        await rt.send(tx, ctokenaddress);
    });
    