#!/usr/bin/env node

const rt = require("./rt");

//token: USDT, DAI, TES, ...
const argv = rt.yargs()
    .options('token', {
        alias: 't',
        describe: 'The symbol of the token collateral',
        type: 'string'
    })
    .argv;

rt.async_raiilock(async function() {

    const token = argv.token;

    rt.assert(token, "missing option: --token | -t");
    
    const deployedctoken = rt.get("ctoken");
    rt.log("get ctoken:", JSON.stringify(deployedctoken, null, 4));
    
    const ctokenaddress = deployedctoken && deployedctoken[token];
    rt.assert(ctokenaddress, `not find ctoken(${token})`);

    const configure = rt.configure()['government']['ctoken'][token];
    rt.assert(configure, `no get 'government.tokancoll.${token}'`);

    const low = configure.low;
    rt.assert(low == 0 || low, `no get 'government.tokancoll.${token}.low'`);
    rt.log(`get 'government.tokancoll.${token}.low':`, low);

    rt.log(`ctoken.methods.setlow(low = ${low})`);

    let ctoken = await rt.rt_contract_at("ctoken", ctokenaddress);
    const tx = ctoken.methods.setlow(low);
    await rt.send(tx, ctokenaddress);
});