#!/usr/bin/env node

const rt = require("./rt");

rt.async_raiilock(async function () {

    const deployedCollateral = rt.get("Collateral");
    rt.log("get Collateral:", JSON.stringify(deployedCollateral, null, 4));

    const tokens = rt.gettokens();
    for (let i = 0; i < tokens.length; ++i) {
        const token = tokens[i].symbol;

        const collateraladdress = deployedCollateral && deployedCollateral[token];
        rt.assert(collateraladdress, `not find collateral(${token})`);

        const configure = rt.configure()['government']['collateral'][token];
        rt.assert(configure, `no get 'government.collateral.${token}'`);

        let seg = configure.seg;
        rt.assert(seg == 0 || seg, `no get 'government.collateral.${token}.seg'`);
        rt.log(`get 'government.collateral.${token}.seg': `, seg);

        seg = rt.web3().utils.toWei(seg.toString(), 'ether').toString();
        rt.log(`Collateral.methods.setseg(seg = ${seg})`);

        let Collateral = await rt.rt_contract_at("Collateral", collateraladdress);
        const tx = Collateral.methods.setseg(seg);
        await rt.send(tx, collateraladdress);
    }
});