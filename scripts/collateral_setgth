#!/usr/bin/env node

const rt = require("./rt");

rt.async_raiilock(async function () {
    const token = rt.argv().module;
    rt.assert(token, "no pass option: -m | --module");

    const deployedCollateral = rt.get("Collateral");
    rt.log("get Collateral:", JSON.stringify(deployedCollateral, null, 4));

    const collateralAddress = deployedCollateral && deployedCollateral[token];
    rt.assert(collateralAddress, `not find Collateral(${token})`);

    let fee = rt.configure().tokens[token].init.fee;
    rt.log(`get 'tokens[${token}].init.fee':`, fee);

    //duty=$(bc -l <<< "scale=27; e( l(2.5 / 100 + 1)/(60 * 60 * 24 * 365)) * 10^27")
    let gth = Math.log(fee / 100 + 1) / (60 * 60 * 24 * 365);
    gth = 1e18 * Math.E ** gth;
    gth = gth.toString();

    let Collateral = await rt.rt_contract_at("Collateral", collateralAddress);

    rt.log(`Collateral.methods.setgth(gth = ${gth})`);
    let tx = Collateral.methods.setgth(gth);
    await rt.send(tx, collateralAddress);

    fee = rt.web3().utils.toWei(fee.toString(), 'ether').toString();
    rt.log(`Collateral.methods.setfee(fee = ${fee})`);
    tx = Collateral.methods.setfee(fee);
    await rt.send(tx, collateralAddress);
});