#!/usr/bin/env node

const rt = require("./rt");

//ETH抵押支持
rt.async_raiilock(async function() {
    const dor = rt.get("debtor");
    rt.log("get debtor: ", dor);
    
    const ceth = await rt.rt_contract_new("ceth", dor);
    rt.log("debtor ceth at: ", ceth.options.address);

    //授权
    let tx;

    const cethaddress = ceth.options.address;
    const bebtor = await rt.rt_contract_at("debtor", dor);

    rt.log(`bebtor.methods.enable: ceth => debtor.incinterest`);
    const debtor_incinterest_sig = rt.web3().eth.abi.encodeFunctionSignature('incinterest(uint256)');
    tx = bebtor.methods.enable(cethaddress, debtor_incinterest_sig);
    await rt.send(tx, dor);

    rt.log(`bebtor.methods.enable: ceth => debtor.decinterest`);
    const debtor_decinterest_sig = rt.web3().eth.abi.encodeFunctionSignature('decinterest(uint256)');
    tx = bebtor.methods.enable(cethaddress, debtor_decinterest_sig);
    await rt.send(tx, dor);

    rt.log(`bebtor.methods.enable: ceth => debtor.incbaddebt`);
    const debtor_incbaddebt_sig = rt.web3().eth.abi.encodeFunctionSignature('incbaddebt(uint256)');
    tx = bebtor.methods.enable(cethaddress, debtor_incbaddebt_sig);
    await rt.send(tx, dor);

    rt.log(`bebtor.methods.enable: ceth => debtor.burn`);
    const debtor_burn_sig = rt.web3().eth.abi.encodeFunctionSignature('burn(address, uint256)');
    tx = bebtor.methods.enable(cethaddress, debtor_burn_sig);
    await rt.send(tx, dor);

    rt.log(`bebtor.methods.enable: ceth => debtor.mint`);
    const debtor_mint_sig = rt.web3().eth.abi.encodeFunctionSignature('mint(address, uint256)');
    tx = bebtor.methods.enable(cethaddress, debtor_mint_sig);
    await rt.send(tx, dor);
    
    rt.set("ceth", cethaddress);
});
